{"version":3,"sources":["components/Statistics/Statistics.js","components/FeedBackOptions/FeedBackOptions.js","components/Section/Section.js","components/Notification/Notification.js","components/FeedBack/FeedBack.js","App.js","index.js","components/FeedBackOptions/FeedBackOptions.module.css"],"names":["Statistics","good","neutral","bad","total","positivePercentage","toFixed","FeedBackOptions","options","updateValue","Object","keys","map","option","className","style","feedBackBtn","onClick","Section","title","children","Notification","message","propsType","PropsType","FeedBack","state","value","setState","prevState","positiveFeedBack","getTotal","countTotalFeedback","values","reduce","countPositiveFeedbackPercentage","this","Component","App","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wNA0BeA,EAtBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,sCAASJ,KACT,qCAAQE,KACR,yCAAYD,KACZ,uCAAUE,KACTH,EAAO,EACN,mDAAsBI,EAAmBC,QAAQ,GAAjD,OACE,S,gBCYKC,EArBS,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAClC,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAAAC,GAAM,OAC9B,wBACEC,UAAWC,IAAMC,YACjBC,QAAS,kBAAMR,EAAYI,IAF7B,SAKGA,GAFIA,SCMAK,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,gCACE,6BAAKD,IACJC,M,QCJDC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,6BAAKA,OAKID,IAEfA,EAAaE,UAAY,CACvBD,Q,OAASE,G,IC0DIC,E,4MAhEbC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPM,YAAc,SAAAkB,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBAAQF,EAAQE,EAAUF,GAAS,O,EAG5DG,iBAAmB,WACjB,OAAQ,EAAKJ,MAAMzB,KAAO,EAAK8B,WAAc,K,EAG/CC,mBAAqB,WACnB,OAAOtB,OAAOuB,OAAO,EAAKP,OAAOQ,QAAO,SAAC9B,EAAOuB,GAAR,OAAkBvB,EAAQuB,M,EAGpEQ,gCAAkC,WAChC,OAAQ,EAAKT,MAAMzB,KAAO,EAAK+B,qBAAwB,K,4CAGzD,WAAU,IAAD,EACwBI,KAAKV,MAA5BzB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQgC,KAAKJ,qBACb3B,EAAqB+B,KAAKD,kCAEhC,OACE,8BACE,qCACE,cAAC,EAAD,CAAShB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEX,QAAS4B,KAAKV,MACdjB,YAAa2B,KAAK3B,gBAGtB,cAAC,EAAD,CAASU,MAAO,aAAhB,SACGiB,KAAKJ,qBAAuB,EAC3B,cAAC,EAAD,CACE/B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAciB,QAAS,iC,GA/Cde,aCKRC,E,4JAPb,WACE,OAAO,cAAC,EAAD,Q,GAFOD,aCAlBE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BC,EAAOC,QAAU,CAAC,YAAc,wC","file":"static/js/main.370e991a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport FeedBack from '../FeedBack/FeedBack';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <p>good:{good}</p>\n      <p>bad:{bad}</p>\n      <p>neutral:{neutral}</p>\n      <p>total:{total}</p>\n      {good > 0 ? (\n        <p>positive feedback:{positivePercentage.toFixed(0)}%</p>\n      ) : null}\n    </div>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport style from './FeedBackOptions.module.css';\n\nconst FeedBackOptions = ({ options, updateValue }) => {\n  return (\n    <div>\n      {Object.keys(options).map(option => (\n        <button\n          className={style.feedBackBtn}\n          onClick={() => updateValue(option)}\n          key={option}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedBackOptions.propTypes = {\n  option: PropTypes.object,\n  updateValue: PropTypes.func.isRequired,\n};\n\nexport default FeedBackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <div>\n      <h1>{title}</h1>\n      {children}\n    </div>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropsType from 'prop-types';\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <h2>{message}</h2>\n    </>\n  );\n};\n\nexport default Notification;\n\nNotification.propsType = {\n  message: PropsType,\n};\n","import React, { Children, Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Statistics from '../Statistics/Statistics';\nimport FeedBackOptions from '../FeedBackOptions/FeedBackOptions';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\n\nclass FeedBack extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  updateValue = value => {\n    this.setState(prevState => ({ [value]: prevState[value] + 1 }));\n  };\n\n  positiveFeedBack = () => {\n    return (this.state.good / this.getTotal()) * 100;\n  };\n\n  countTotalFeedback = () => {\n    return Object.values(this.state).reduce((total, value) => total + value);\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (this.state.good / this.countTotalFeedback()) * 100;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div>\n        <>\n          <Section title={'Please leave feedback'}>\n            <FeedBackOptions\n              options={this.state}\n              updateValue={this.updateValue}\n            />\n          </Section>\n          <Section title={'Statistic:'}>\n            {this.countTotalFeedback() > 0 ? (\n              <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={total}\n                positivePercentage={positivePercentage}\n              />\n            ) : (\n              <Notification message={'No feedback given'} />\n            )}\n          </Section>\n        </>\n      </div>\n    );\n  }\n}\n\nFeedBack.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n  message: PropTypes.string,\n};\n\nexport default FeedBack;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport FeedBack from './components/FeedBack/FeedBack';\n\nclass App extends Component {\n  render() {\n    return <FeedBack />;\n  }\n}\n\nApp.propTypes = {};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedBackBtn\":\"FeedBackOptions_feedBackBtn__2eY2a\"};"],"sourceRoot":""}